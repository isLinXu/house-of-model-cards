SegformerModel(
  (encoder): SegformerEncoder(
    (patch_embeddings): ModuleList(
      (0): SegformerOverlapPatchEmbeddings(
        (proj): Conv2d(3, 32, kernel_size=(7, 7), stride=(4, 4), padding=(3, 3))
        (layer_norm): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
      )
      (1): SegformerOverlapPatchEmbeddings(
        (proj): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (layer_norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
      )
      (2): SegformerOverlapPatchEmbeddings(
        (proj): Conv2d(64, 160, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (layer_norm): LayerNorm((160,), eps=1e-05, elementwise_affine=True)
      )
      (3): SegformerOverlapPatchEmbeddings(
        (proj): Conv2d(160, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (layer_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      )
    )
    (block): ModuleList(
      (0): ModuleList(
        (0): SegformerLayer(
          (layer_norm_1): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
          (attention): SegformerAttention(
            (self): SegformerEfficientSelfAttention(
              (query): Linear(in_features=32, out_features=32, bias=True)
              (key): Linear(in_features=32, out_features=32, bias=True)
              (value): Linear(in_features=32, out_features=32, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (sr): Conv2d(32, 32, kernel_size=(8, 8), stride=(8, 8))
              (layer_norm): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
            )
            (output): SegformerSelfOutput(
              (dense): Linear(in_features=32, out_features=32, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (drop_path): Identity()
          (layer_norm_2): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
          (mlp): SegformerMixFFN(
            (dense1): Linear(in_features=32, out_features=128, bias=True)
            (dwconv): SegformerDWConv(
              (dwconv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            )
            (intermediate_act_fn): GELUActivation()
            (dense2): Linear(in_features=128, out_features=32, bias=True)
            (dropout): Dropout(p=0.0, inplace=False)
          )
        )
        (1): SegformerLayer(
          (layer_norm_1): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
          (attention): SegformerAttention(
            (self): SegformerEfficientSelfAttention(
              (query): Linear(in_features=32, out_features=32, bias=True)
              (key): Linear(in_features=32, out_features=32, bias=True)
              (value): Linear(in_features=32, out_features=32, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (sr): Conv2d(32, 32, kernel_size=(8, 8), stride=(8, 8))
              (layer_norm): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
            )
            (output): SegformerSelfOutput(
              (dense): Linear(in_features=32, out_features=32, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (drop_path): SegformerDropPath(p=0.014285714365541935)
          (layer_norm_2): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
          (mlp): SegformerMixFFN(
            (dense1): Linear(in_features=32, out_features=128, bias=True)
            (dwconv): SegformerDWConv(
              (dwconv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
            )
            (intermediate_act_fn): GELUActivation()
            (dense2): Linear(in_features=128, out_features=32, bias=True)
            (dropout): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (1): ModuleList(
        (0): SegformerLayer(
          (layer_norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (attention): SegformerAttention(
            (self): SegformerEfficientSelfAttention(
              (query): Linear(in_features=64, out_features=64, bias=True)
              (key): Linear(in_features=64, out_features=64, bias=True)
              (value): Linear(in_features=64, out_features=64, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (sr): Conv2d(64, 64, kernel_size=(4, 4), stride=(4, 4))
              (layer_norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
            )
            (output): SegformerSelfOutput(
              (dense): Linear(in_features=64, out_features=64, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (drop_path): SegformerDropPath(p=0.02857142873108387)
          (layer_norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (mlp): SegformerMixFFN(
            (dense1): Linear(in_features=64, out_features=256, bias=True)
            (dwconv): SegformerDWConv(
              (dwconv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256)
            )
            (intermediate_act_fn): GELUActivation()
            (dense2): Linear(in_features=256, out_features=64, bias=True)
            (dropout): Dropout(p=0.0, inplace=False)
          )
        )
        (1): SegformerLayer(
          (layer_norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (attention): SegformerAttention(
            (self): SegformerEfficientSelfAttention(
              (query): Linear(in_features=64, out_features=64, bias=True)
              (key): Linear(in_features=64, out_features=64, bias=True)
              (value): Linear(in_features=64, out_features=64, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (sr): Conv2d(64, 64, kernel_size=(4, 4), stride=(4, 4))
              (layer_norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
            )
            (output): SegformerSelfOutput(
              (dense): Linear(in_features=64, out_features=64, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (drop_path): SegformerDropPath(p=0.04285714402794838)
          (layer_norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          (mlp): SegformerMixFFN(
            (dense1): Linear(in_features=64, out_features=256, bias=True)
            (dwconv): SegformerDWConv(
              (dwconv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256)
            )
            (intermediate_act_fn): GELUActivation()
            (dense2): Linear(in_features=256, out_features=64, bias=True)
            (dropout): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (2): ModuleList(
        (0): SegformerLayer(
          (layer_norm_1): LayerNorm((160,), eps=1e-05, elementwise_affine=True)
          (attention): SegformerAttention(
            (self): SegformerEfficientSelfAttention(
              (query): Linear(in_features=160, out_features=160, bias=True)
              (key): Linear(in_features=160, out_features=160, bias=True)
              (value): Linear(in_features=160, out_features=160, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (sr): Conv2d(160, 160, kernel_size=(2, 2), stride=(2, 2))
              (layer_norm): LayerNorm((160,), eps=1e-05, elementwise_affine=True)
            )
            (output): SegformerSelfOutput(
              (dense): Linear(in_features=160, out_features=160, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (drop_path): SegformerDropPath(p=0.05714285746216774)
          (layer_norm_2): LayerNorm((160,), eps=1e-05, elementwise_affine=True)
          (mlp): SegformerMixFFN(
            (dense1): Linear(in_features=160, out_features=640, bias=True)
            (dwconv): SegformerDWConv(
              (dwconv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=640)
            )
            (intermediate_act_fn): GELUActivation()
            (dense2): Linear(in_features=640, out_features=160, bias=True)
            (dropout): Dropout(p=0.0, inplace=False)
          )
        )
        (1): SegformerLayer(
          (layer_norm_1): LayerNorm((160,), eps=1e-05, elementwise_affine=True)
          (attention): SegformerAttention(
            (self): SegformerEfficientSelfAttention(
              (query): Linear(in_features=160, out_features=160, bias=True)
              (key): Linear(in_features=160, out_features=160, bias=True)
              (value): Linear(in_features=160, out_features=160, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (sr): Conv2d(160, 160, kernel_size=(2, 2), stride=(2, 2))
              (layer_norm): LayerNorm((160,), eps=1e-05, elementwise_affine=True)
            )
            (output): SegformerSelfOutput(
              (dense): Linear(in_features=160, out_features=160, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (drop_path): SegformerDropPath(p=0.0714285746216774)
          (layer_norm_2): LayerNorm((160,), eps=1e-05, elementwise_affine=True)
          (mlp): SegformerMixFFN(
            (dense1): Linear(in_features=160, out_features=640, bias=True)
            (dwconv): SegformerDWConv(
              (dwconv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=640)
            )
            (intermediate_act_fn): GELUActivation()
            (dense2): Linear(in_features=640, out_features=160, bias=True)
            (dropout): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (3): ModuleList(
        (0): SegformerLayer(
          (layer_norm_1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (attention): SegformerAttention(
            (self): SegformerEfficientSelfAttention(
              (query): Linear(in_features=256, out_features=256, bias=True)
              (key): Linear(in_features=256, out_features=256, bias=True)
              (value): Linear(in_features=256, out_features=256, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (output): SegformerSelfOutput(
              (dense): Linear(in_features=256, out_features=256, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (drop_path): SegformerDropPath(p=0.08571428805589676)
          (layer_norm_2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (mlp): SegformerMixFFN(
            (dense1): Linear(in_features=256, out_features=1024, bias=True)
            (dwconv): SegformerDWConv(
              (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
            )
            (intermediate_act_fn): GELUActivation()
            (dense2): Linear(in_features=1024, out_features=256, bias=True)
            (dropout): Dropout(p=0.0, inplace=False)
          )
        )
        (1): SegformerLayer(
          (layer_norm_1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (attention): SegformerAttention(
            (self): SegformerEfficientSelfAttention(
              (query): Linear(in_features=256, out_features=256, bias=True)
              (key): Linear(in_features=256, out_features=256, bias=True)
              (value): Linear(in_features=256, out_features=256, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (output): SegformerSelfOutput(
              (dense): Linear(in_features=256, out_features=256, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (drop_path): SegformerDropPath(p=0.10000000149011612)
          (layer_norm_2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (mlp): SegformerMixFFN(
            (dense1): Linear(in_features=256, out_features=1024, bias=True)
            (dwconv): SegformerDWConv(
              (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
            )
            (intermediate_act_fn): GELUActivation()
            (dense2): Linear(in_features=1024, out_features=256, bias=True)
            (dropout): Dropout(p=0.0, inplace=False)
          )
        )
      )
    )
    (layer_norm): ModuleList(
      (0): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
      (1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
      (2): LayerNorm((160,), eps=1e-05, elementwise_affine=True)
      (3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
    )
  )
)
