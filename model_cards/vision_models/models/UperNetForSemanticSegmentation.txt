UperNetForSemanticSegmentation(
  (backbone): ConvNextBackbone(
    (embeddings): ConvNextEmbeddings(
      (patch_embeddings): Conv2d(3, 96, kernel_size=(4, 4), stride=(4, 4))
      (layernorm): ConvNextLayerNorm()
    )
    (encoder): ConvNextEncoder(
      (stages): ModuleList(
        (0): ConvNextStage(
          (downsampling_layer): Identity()
          (layers): Sequential(
            (0): ConvNextLayer(
              (dwconv): Conv2d(96, 96, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=96)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=96, out_features=384, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=384, out_features=96, bias=True)
              (drop_path): Identity()
            )
            (1): ConvNextLayer(
              (dwconv): Conv2d(96, 96, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=96)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=96, out_features=384, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=384, out_features=96, bias=True)
              (drop_path): Identity()
            )
            (2): ConvNextLayer(
              (dwconv): Conv2d(96, 96, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=96)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=96, out_features=384, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=384, out_features=96, bias=True)
              (drop_path): Identity()
            )
          )
        )
        (1): ConvNextStage(
          (downsampling_layer): Sequential(
            (0): ConvNextLayerNorm()
            (1): Conv2d(96, 192, kernel_size=(2, 2), stride=(2, 2))
          )
          (layers): Sequential(
            (0): ConvNextLayer(
              (dwconv): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=192, out_features=768, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=768, out_features=192, bias=True)
              (drop_path): Identity()
            )
            (1): ConvNextLayer(
              (dwconv): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=192, out_features=768, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=768, out_features=192, bias=True)
              (drop_path): Identity()
            )
            (2): ConvNextLayer(
              (dwconv): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=192, out_features=768, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=768, out_features=192, bias=True)
              (drop_path): Identity()
            )
          )
        )
        (2): ConvNextStage(
          (downsampling_layer): Sequential(
            (0): ConvNextLayerNorm()
            (1): Conv2d(192, 384, kernel_size=(2, 2), stride=(2, 2))
          )
          (layers): Sequential(
            (0): ConvNextLayer(
              (dwconv): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=384, out_features=1536, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=1536, out_features=384, bias=True)
              (drop_path): Identity()
            )
            (1): ConvNextLayer(
              (dwconv): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=384, out_features=1536, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=1536, out_features=384, bias=True)
              (drop_path): Identity()
            )
            (2): ConvNextLayer(
              (dwconv): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=384, out_features=1536, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=1536, out_features=384, bias=True)
              (drop_path): Identity()
            )
            (3): ConvNextLayer(
              (dwconv): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=384, out_features=1536, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=1536, out_features=384, bias=True)
              (drop_path): Identity()
            )
            (4): ConvNextLayer(
              (dwconv): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=384, out_features=1536, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=1536, out_features=384, bias=True)
              (drop_path): Identity()
            )
            (5): ConvNextLayer(
              (dwconv): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=384, out_features=1536, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=1536, out_features=384, bias=True)
              (drop_path): Identity()
            )
            (6): ConvNextLayer(
              (dwconv): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=384, out_features=1536, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=1536, out_features=384, bias=True)
              (drop_path): Identity()
            )
            (7): ConvNextLayer(
              (dwconv): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=384, out_features=1536, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=1536, out_features=384, bias=True)
              (drop_path): Identity()
            )
            (8): ConvNextLayer(
              (dwconv): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=384, out_features=1536, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=1536, out_features=384, bias=True)
              (drop_path): Identity()
            )
          )
        )
        (3): ConvNextStage(
          (downsampling_layer): Sequential(
            (0): ConvNextLayerNorm()
            (1): Conv2d(384, 768, kernel_size=(2, 2), stride=(2, 2))
          )
          (layers): Sequential(
            (0): ConvNextLayer(
              (dwconv): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=768, out_features=3072, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=3072, out_features=768, bias=True)
              (drop_path): Identity()
            )
            (1): ConvNextLayer(
              (dwconv): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=768, out_features=3072, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=3072, out_features=768, bias=True)
              (drop_path): Identity()
            )
            (2): ConvNextLayer(
              (dwconv): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
              (layernorm): ConvNextLayerNorm()
              (pwconv1): Linear(in_features=768, out_features=3072, bias=True)
              (act): GELUActivation()
              (pwconv2): Linear(in_features=3072, out_features=768, bias=True)
              (drop_path): Identity()
            )
          )
        )
      )
    )
    (hidden_states_norms): ModuleDict(
      (stage1): ConvNextLayerNorm()
      (stage2): ConvNextLayerNorm()
      (stage3): ConvNextLayerNorm()
      (stage4): ConvNextLayerNorm()
    )
  )
  (decode_head): UperNetHead(
    (classifier): Conv2d(512, 2, kernel_size=(1, 1), stride=(1, 1))
    (psp_modules): UperNetPyramidPoolingModule(
      (0): UperNetPyramidPoolingBlock(
        (0): AdaptiveAvgPool2d(output_size=1)
        (1): UperNetConvModule(
          (conv): Conv2d(768, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (batch_norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): ReLU()
        )
      )
      (1): UperNetPyramidPoolingBlock(
        (0): AdaptiveAvgPool2d(output_size=2)
        (1): UperNetConvModule(
          (conv): Conv2d(768, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (batch_norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): ReLU()
        )
      )
      (2): UperNetPyramidPoolingBlock(
        (0): AdaptiveAvgPool2d(output_size=3)
        (1): UperNetConvModule(
          (conv): Conv2d(768, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (batch_norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): ReLU()
        )
      )
      (3): UperNetPyramidPoolingBlock(
        (0): AdaptiveAvgPool2d(output_size=6)
        (1): UperNetConvModule(
          (conv): Conv2d(768, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (batch_norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): ReLU()
        )
      )
    )
    (bottleneck): UperNetConvModule(
      (conv): Conv2d(2816, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (batch_norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): ReLU()
    )
    (lateral_convs): ModuleList(
      (0): UperNetConvModule(
        (conv): Conv2d(96, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): ReLU()
      )
      (1): UperNetConvModule(
        (conv): Conv2d(192, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): ReLU()
      )
      (2): UperNetConvModule(
        (conv): Conv2d(384, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): ReLU()
      )
    )
    (fpn_convs): ModuleList(
      (0-2): 3 x UperNetConvModule(
        (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): ReLU()
      )
    )
    (fpn_bottleneck): UperNetConvModule(
      (conv): Conv2d(2048, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (batch_norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): ReLU()
    )
  )
  (auxiliary_head): UperNetFCNHead(
    (convs): Sequential(
      (0): UperNetConvModule(
        (conv): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): ReLU()
      )
    )
    (classifier): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
  )
)
